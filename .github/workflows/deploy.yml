name: Deployment

on:
  push:
    tags: v[0-9]*

jobs:
  deploy:
    env:
      REPO_NAME: ${{ github.event.repository.name }}
      JAR_NAME: ${{ github.event.repository.name }}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Set env variables
      run: |
        tag=${GITHUB_REF#refs/*/}
        ver="$tag"
        ver=$(echo "$ver" | tr '-' ' ')
        ver="${ver:1}"
        git config --global user.email "cli@github.com"
        git config --global user.name "Github Actions"
        echo "TAG=$tag" >> $GITHUB_ENV
        echo "VER=$ver" >> $GITHUB_ENV
        echo "CURR_VER=$(jq -r '.version' plugin.json)" >> $GITHUB_ENV

    - name: Update version and push
      if: ${{ env.CURR_VER != env.VER }}
      run: |
        cd src/main/resources/
        git fetch origin
        git checkout master
        tmp=$(mktemp)
        jq --arg v "$VER" '.version = $v' plugin.json > "$tmp"
        mv "$tmp" plugin.json
        git commit -am "Update to v$VER"
        git tag -a -f $TAG -m "$JAR_NAME v$VER"
        git push -f --atomic origin master $TAG
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Sign jar
      run: |
        echo "${{ secrets.KEYSTORE }}" > .keystore.asc
        gpg -d --passphrase ${{ secrets.PASSPHRASE }} --batch .keystore.asc > .keystore
        jarsigner \
        -keystore .keystore \
        -storepass ${{ secrets.STOREPASS }} \
        -keypass ${{ secrets.KEYPASS }} \
        target/$JAR_NAME.jar \
        ${{ secrets.ALIAS }}

    - name: Update and push to remote gist
      env:
        GIST_LINK: "gist.github.com/dd496e2dd48fb610ca4bccc3be1f59f3.git"
      run: |
        cd ../
        git clone --depth=1 https://$GIST_LINK remote
        cp $REPO_NAME/target/$JAR_NAME.jar remote/
        cp $REPO_NAME/src/main/resources/plugin.json remote/
        cd remote
        git commit -am "v$VER"
        git push https://${GITHUB_ACTOR}:${{ secrets.PAT }}@$GIST_LINK
      
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        tag_name: ${{ env.TAG }}
        release_name: Release v${{ env.VER }}
      
    - name: Upload release asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PAT }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: target/${{ env.JAR_NAME }}.jar
        asset_name: ${{ env.JAR_NAME }}.jar
        asset_content_type: application/java-archive
